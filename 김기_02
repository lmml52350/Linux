접속 후 프롬프트 출력 내용

        [root@localhost ~]#

            root            : 접속한 사용자 ID
            localhost       : 장치명, 어느 장치에 접속했는지 확인
            ~               : 현재 위치한 디렉토리
            #               : 사용 권한(# : 관리자 권한, $ : 일반 사용자 권한)

    * 디렉토리 : GUI에서 사용하는 폴더와 동일한 개념

명령어 입력 시 주의사항
 1. 대소문자 구별
     대문자와 소문자를 서로 다른 문자로 인식(ex. i와 I는 서로 다른 문자)

 2. 기본적으로 한 줄에는 명령어를 하나만 사용
     여러개의 명령어를 순차적으로 적용시키는 기호가 존재
     그 기호를 사용하지 않으면 명령어는 하나만 사용 가능

기본 디렉토리
 - 모든 운영체제는 디렉토리들의 tree 구조로 구성되어 있다
   (Linux는 최상위 디렉토리 / 를 기준으로 tree 구조가 구성되어 있다)

        /bin    : 공용 명령어(일반 사용자 + 관리자 명령어)가 저장된 디렉토리로 연결되는 링크 파일
        /boot   : 부팅에 필요한 이미지 파일/설정 파일들이 들어있는 디렉토리
        /dev    : 장치 파일이 저장되는 디렉토리
        /etc    : 각종 파일들이 저장된 디렉토리
        /home   : 일반 사용자들의 홈 디렉토리 만들어지는 기본 위치
        /lib    : 시스템 및 프로그램 동작에 필요한 각종 라이브러리가 모여있는 디렉토리(32bit + 64bit)로 연결되는 링크파일
        /lib64  : 64bit 전용의 라이브러리가 저장된 디렉토리로 연결되는 링크파일
        /media  : local device(내 장치에 물리적으로 연결된 장치)를 사용할 수 있도록 연결해주는 디렉토리
        /mnt    : remote device(local device를 제외한 모든 장치)를 사용할 수 있도록 연결해주는 디렉토리
        /opt    : /usr에 저장되지 않는 추가 어플리케이션들의 설치 경로로 사용되는 디렉토리
        /proc   : 실행 중인 프로세스의 정보와 CPU, 메모리 등의 시스템 정보가 가상 파일로 저장된 디렉토리
        /root   : 관리자 root의 홈 디렉토리
        /run    : 실행 중인 서비스와 관련 파일이 저장되는 디렉토리
        /sbin   : 시스템 제어 명령어(관리자 명령어)가 저장된 디렉토리로 연결되는 링크 파일
        /srv    : 서버 동작 중 외부 사용자가 접근하기 쉽게 설정하는 디렉토리
        /sys    : 시스템이 필요로 하는 각종 파일들(kernel 데이터 구조 속성 등)이 들어있는 디렉토리
        /tmp    : 각종 프로그램이 실행되면서 생성되는 임시 파일/디렉토리들이 만들어지는 디렉토리
        /usr    : 일반 사용자들을 위한 대부분의 프로그램이 들어있는 디렉토리
        /var    : 자주 변경되는 시스템 파일들(log 등)이 모여있는 디렉토리



    * -> 기호는 symbolic link 파일을 의미(= windows의 바로가기 개념)

    * 홈 디렉토리 : 사용자의 개인 디렉토리, 다른 사용자가 접근할 수 없는 공간
